data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
runApp('GitHub/BI_Reporting/Work/R_Krishna')
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- paste("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '{as.character(input$dates[1])}' and DATE '{as.character(input$dates[2])}';")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
runApp('GitHub/BI_Reporting/Work/R_Krishna')
runApp('GitHub/BI_Reporting/Work/R_Krishna')
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
library(glue)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- glue("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '{as.character(input$dates[1])}' and DATE '{as.character(input$dates[2])}';")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
install.packages("glue")
library("glue", lib.loc="~/R/win-library/3.5")
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
library(glue)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- glue("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '{as.character(input$dates[1])}' and DATE '{as.character(input$dates[2])}';")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
library(glue)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- glue::glue("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '{input$dates[1]}' and DATE '{input$dates[2]}';")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
library(glue)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- glue::glue("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '", input$dateRange[1], "' AND Date <= '", input$dateRange[2], "'", sep = "")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
library(glue)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- glue_sql("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '{as.character(input$dates[1])}' and DATE '{as.character(input$dates[2])}';")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
shiny::runApp('GitHub/BI_Reporting/Work/R_Krishna')
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(RODBC)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(dplyr)
library(reshape)
library(viridis)
library(wesanderson)
library (plotly)
library (shinyBS)
library(glue)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- glue_sql("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE between DATE '{as.character(input$dates[1])}' and DATE '{as.character(input$dates[2])}';")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F
)
employee <-  sqlQuery(connHandle, "SELECT AGENT_NAME AS USERS FROM DIM_AGENT order by 1 asc")
days_present <- unique(data_temp$WEEK_DAY)
# Chanege the date Oracle format to R date
data_temp$CONTACT_DATE <- as.Date(data_temp$CONTACT_DATE, "%m/%d/%Y")
# aggregating the data for the second tab - weekly employee performance
data_left_pgOne <-  data_temp %>%
select (.,AGENT_NAME,TOTAL_SUMMARY_IN_HRS,CONTACT_DATE) %>%
group_by(AGENT_NAME, CONTACT_DATE) %>%
summarise(WORK_HOURS = sum(TOTAL_SUMMARY_IN_HRS, na.rm = TRUE))
# aggregating the data for the second tab - overall call perfrmance
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
ind_flag <- 4
#melted_data <-  reshape2::melt(over_perf) %>% mutate_at(vars(value), funs(./ sum(.)*100))
close(connHandle)
runApp('GitHub/BI_Reporting/Work/R_Krishna')
runApp('GitHub/BI_Reporting/Work/R_Krishna')
runApp('GitHub/BI_Reporting/Work/R_Krishna')
shiny::runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
# import the libraries
library(shiny)
library(shinythemes)
library(RODBC)
# variable for conditional coloring at ggplot
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
metaQuery <- paste("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND TO_DATE(DF.CONTACT_DATE , 'MM/DD/YYYY') BETWEEN TO_DATE('",dayStrt,"'), 'YYYY-MM-DD')
AND TO_DATE('",dayend,"'), 'YYYY-MM-DD') ;")
# import the libraries
library(shiny)
library(shinythemes)
library(RODBC)
# variable for conditional coloring at ggplot
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
dayStrt <- '2019-01-16'
dayend <- '2019-02-16'
metaQuery <- paste("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND TO_DATE(DF.CONTACT_DATE , 'MM/DD/YYYY') BETWEEN TO_DATE('",dayStrt,"'), 'YYYY-MM-DD')
AND TO_DATE('",dayend,"'), 'YYYY-MM-DD') ;")
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F)
metaQuery
metaQuery <- paste("SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND TO_DATE(DF.CONTACT_DATE , 'MM/DD/YYYY') BETWEEN TO_DATE('",dayStrt,"', 'YYYY-MM-DD')
AND TO_DATE('",dayend,"', 'YYYY-MM-DD') ;")
data_temp  <- sqlQuery(connHandle, metaQuery,stringsAsFactors = F)
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
install.packages('dplyr')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
runApp('sample')
setwd("~/GitHub/BI_Reporting/Work/R")
runApp()
ind_flag <- 4
runApp()
setwd("~/GitHub/BI_Reporting/Work/R")
runApp()
runApp()
